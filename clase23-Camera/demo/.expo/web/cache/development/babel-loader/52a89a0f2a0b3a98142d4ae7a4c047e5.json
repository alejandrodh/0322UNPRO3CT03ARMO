{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\nimport { adapt } from \"../core/AnimatedBlock\";\n\nfunction reduce(fn) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn(val(a), val(b));\n    });\n  };\n}\n\nfunction reduceFrom(fn, initialValue) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn(val(a), val(b));\n    }, initialValue);\n  };\n}\n\nfunction infix(fn) {\n  return function (input) {\n    return fn(val(input[0]), val(input[1]));\n  };\n}\n\nfunction single(fn) {\n  return function (input) {\n    return fn(val(input[0]));\n  };\n}\n\nvar OPERATIONS = {\n  add: reduce(function (a, b) {\n    return a + b;\n  }),\n  sub: reduce(function (a, b) {\n    return a - b;\n  }),\n  multiply: reduce(function (a, b) {\n    return a * b;\n  }),\n  divide: reduce(function (a, b) {\n    return a / b;\n  }),\n  pow: reduce(function (a, b) {\n    return Math.pow(a, b);\n  }),\n  modulo: reduce(function (a, b) {\n    return (a % b + b) % b;\n  }),\n  sqrt: single(function (a) {\n    return Math.sqrt(a);\n  }),\n  log: single(function (a) {\n    return Math.log(a);\n  }),\n  sin: single(function (a) {\n    return Math.sin(a);\n  }),\n  cos: single(function (a) {\n    return Math.cos(a);\n  }),\n  tan: single(function (a) {\n    return Math.tan(a);\n  }),\n  acos: single(function (a) {\n    return Math.acos(a);\n  }),\n  asin: single(function (a) {\n    return Math.asin(a);\n  }),\n  atan: single(function (a) {\n    return Math.atan(a);\n  }),\n  exp: single(function (a) {\n    return Math.exp(a);\n  }),\n  round: single(function (a) {\n    return Math.round(a);\n  }),\n  abs: single(function (a) {\n    return Math.abs(a);\n  }),\n  ceil: single(function (a) {\n    return Math.ceil(a);\n  }),\n  floor: single(function (a) {\n    return Math.floor(a);\n  }),\n  max: reduce(function (a, b) {\n    return Math.max(a, b);\n  }),\n  min: reduce(function (a, b) {\n    return Math.min(a, b);\n  }),\n  and: reduceFrom(function (a, b) {\n    return a && b;\n  }, true),\n  or: reduceFrom(function (a, b) {\n    return a || b;\n  }, false),\n  not: single(function (a) {\n    return !a;\n  }),\n  defined: single(function (a) {\n    return a !== null && a !== undefined && !isNaN(a);\n  }),\n  lessThan: infix(function (a, b) {\n    return a < b;\n  }),\n  eq: infix(function (a, b) {\n    return a == b;\n  }),\n  greaterThan: infix(function (a, b) {\n    return a > b;\n  }),\n  lessOrEq: infix(function (a, b) {\n    return a <= b;\n  }),\n  greaterOrEq: infix(function (a, b) {\n    return a >= b;\n  }),\n  neq: infix(function (a, b) {\n    return a != b;\n  })\n};\n\nvar AnimatedOperator = function (_AnimatedNode) {\n  _inherits(AnimatedOperator, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedOperator);\n\n  function AnimatedOperator(operator, input) {\n    var _this;\n\n    _classCallCheck(this, AnimatedOperator);\n\n    invariant(typeof operator === 'string', \"Reanimated: Animated.operator node first argument should be of type String, but got: \" + operator);\n    invariant(input.every(function (el) {\n      return el instanceof AnimatedNode || typeof el === 'string' || typeof el === 'number';\n    }), \"Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got \" + input);\n    _this = _super.call(this, {\n      type: 'op',\n      op: operator,\n      input: input\n    }, input);\n    _this._op = operator;\n    _this._input = input;\n    return _this;\n  }\n\n  _createClass(AnimatedOperator, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedOperator, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if (!this._operation) {\n        this._operation = OPERATIONS[this._op];\n        invariant(this._operation, \"Illegal operator '%s'\", this._op);\n      }\n\n      return this._operation(this._input);\n    }\n  }]);\n\n  return AnimatedOperator;\n}(AnimatedNode);\n\nexport function createAnimatedOperator(name) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new AnimatedOperator(name, args.map(adapt));\n  };\n}","map":{"version":3,"names":["AnimatedNode","val","invariant","adapt","reduce","fn","input","a","b","reduceFrom","initialValue","infix","single","OPERATIONS","add","sub","multiply","divide","pow","Math","modulo","sqrt","log","sin","cos","tan","acos","asin","atan","exp","round","abs","ceil","floor","max","min","and","or","not","defined","undefined","isNaN","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","AnimatedOperator","operator","every","el","type","op","_op","_input","__nodeID","_operation","createAnimatedOperator","name","args","map"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedOperator.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nimport invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\n\nfunction reduce(fn) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)));\n}\n\nfunction reduceFrom(fn, initialValue) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)), initialValue);\n}\n\nfunction infix(fn) {\n  return (input) => fn(val(input[0]), val(input[1]));\n}\n\nfunction single(fn) {\n  return (input) => fn(val(input[0]));\n}\n\nconst OPERATIONS = {\n  // arithmetic\n  add: reduce((a, b) => a + b),\n  sub: reduce((a, b) => a - b),\n  multiply: reduce((a, b) => a * b),\n  divide: reduce((a, b) => a / b),\n  pow: reduce((a, b) => Math.pow(a, b)),\n  modulo: reduce((a, b) => ((a % b) + b) % b),\n  sqrt: single((a) => Math.sqrt(a)),\n  log: single((a) => Math.log(a)),\n  sin: single((a) => Math.sin(a)),\n  cos: single((a) => Math.cos(a)),\n  tan: single((a) => Math.tan(a)),\n  acos: single((a) => Math.acos(a)),\n  asin: single((a) => Math.asin(a)),\n  atan: single((a) => Math.atan(a)),\n  exp: single((a) => Math.exp(a)),\n  round: single((a) => Math.round(a)),\n  abs: single((a) => Math.abs(a)),\n  ceil: single((a) => Math.ceil(a)),\n  floor: single((a) => Math.floor(a)),\n  max: reduce((a, b) => Math.max(a, b)),\n  min: reduce((a, b) => Math.min(a, b)),\n\n  // logical\n  and: reduceFrom((a, b) => a && b, true),\n  or: reduceFrom((a, b) => a || b, false),\n  not: single((a) => !a),\n  defined: single((a) => a !== null && a !== undefined && !isNaN(a)),\n\n  // comparing\n  lessThan: infix((a, b) => a < b),\n  /* eslint-disable-next-line eqeqeq */\n  eq: infix((a, b) => a == b),\n  greaterThan: infix((a, b) => a > b),\n  lessOrEq: infix((a, b) => a <= b),\n  greaterOrEq: infix((a, b) => a >= b),\n  /* eslint-disable-next-line eqeqeq */\n  neq: infix((a, b) => a != b),\n};\n\nclass AnimatedOperator extends AnimatedNode {\n  _input;\n  _op;\n  _operation;\n\n  constructor(operator, input) {\n    invariant(\n      typeof operator === 'string',\n      `Reanimated: Animated.operator node first argument should be of type String, but got: ${operator}`\n    );\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'string' ||\n          typeof el === 'number'\n      ),\n      `Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got ${input}`\n    );\n    super({ type: 'op', op: operator, input }, input);\n    this._op = operator;\n    this._input = input;\n  }\n\n  toString() {\n    return `AnimatedOperator, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (!this._operation) {\n      this._operation = OPERATIONS[this._op];\n      invariant(this._operation, `Illegal operator '%s'`, this._op);\n    }\n    return this._operation(this._input);\n  }\n}\n\nexport function createAnimatedOperator(name) {\n  return (...args) => new AnimatedOperator(name, args.map(adapt));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}