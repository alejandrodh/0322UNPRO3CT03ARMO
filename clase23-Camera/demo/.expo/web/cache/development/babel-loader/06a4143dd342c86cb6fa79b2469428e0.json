{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport { createAnimatedCallFunc } from \"./AnimatedCallFunc\";\nimport { createAnimatedParam } from \"./AnimatedParam\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\n\nvar AnimatedFunction = function (_AnimatedNode) {\n  _inherits(AnimatedFunction, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedFunction);\n\n  function AnimatedFunction(what) {\n    var _this;\n\n    _classCallCheck(this, AnimatedFunction);\n\n    invariant(what instanceof AnimatedNode, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \" + what);\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    _this = _super.call(this, {\n      type: 'func',\n      what: what\n    }, [what].concat(params));\n    _this._what = what;\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  _createClass(AnimatedFunction, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return val(this._what);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedFunction, id: \" + this.__nodeID;\n    }\n  }]);\n\n  return AnimatedFunction;\n}(AnimatedNode);\n\nexport function createAnimatedFunction(cb) {\n  var params = new Array(cb.length);\n\n  for (var i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n\n  var what = cb.apply(void 0, params);\n\n  var func = _construct(AnimatedFunction, [what].concat(params));\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (args.length !== params.length) {\n      throw new Error('Parameter mismatch when calling reanimated function. Expected ' + params.length + ' parameters, got ' + args.length + '.');\n    }\n\n    return createAnimatedCallFunc(func, args, params);\n  };\n}","map":{"version":3,"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","val","invariant","AnimatedFunction","what","params","type","_what","__attach","__nodeID","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedFunction.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line node/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,YAAP;AACA,SAASC,sBAAT;AACA,SAASC,mBAAT;AACA,SAASC,GAAT;AACA,OAAOC,SAAP,MAAsB,WAAtB;;IAEMC,gB;;;;;EAGJ,0BAAYC,IAAZ,EAA6B;IAAA;;IAAA;;IAC3BF,SAAS,CACPE,IAAI,YAAYN,YADT,2FAEgFM,IAFhF,CAAT;;IAD2B,kCAARC,MAAQ;MAARA,MAAQ;IAAA;;IAK3B,0BACE;MACEC,IAAI,EAAE,MADR;MAEEF,IAAI,EAAJA;IAFF,CADF,GAKGA,IALH,SAKYC,MALZ;IAOA,MAAKE,KAAL,GAAaH,IAAb;;IACA,MAAKI,QAAL;;IAb2B;EAc5B;;;;WAED,wBAAe;MACb,OAAOP,GAAG,CAAC,KAAKM,KAAN,CAAV;IACD;;;WAED,oBAAW;MACT,kCAAgC,KAAKE,QAArC;IACD;;;;EAzB4BX,Y;;AA4B/B,OAAO,SAASY,sBAAT,CAAgCC,EAAhC,EAAoC;EACzC,IAAMN,MAAM,GAAG,IAAIO,KAAJ,CAAUD,EAAE,CAACE,MAAb,CAAf;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAAM,CAACQ,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACtCT,MAAM,CAACS,CAAD,CAAN,GAAYd,mBAAmB,EAA/B;EACD;;EAED,IAAMI,IAAI,GAAGO,EAAE,MAAF,SAAMN,MAAN,CAAb;;EACA,IAAMU,IAAI,cAAOZ,gBAAP,GAAwBC,IAAxB,SAAiCC,MAAjC,EAAV;;EACA,OAAO,YAAa;IAAA,mCAATW,IAAS;MAATA,IAAS;IAAA;;IAClB,IAAIA,IAAI,CAACH,MAAL,KAAgBR,MAAM,CAACQ,MAA3B,EAAmC;MACjC,MAAM,IAAII,KAAJ,CACJ,mEACEZ,MAAM,CAACQ,MADT,GAEE,mBAFF,GAGEG,IAAI,CAACH,MAHP,GAIE,GALE,CAAN;IAOD;;IACD,OAAOd,sBAAsB,CAACgB,IAAD,EAAOC,IAAP,EAAaX,MAAb,CAA7B;EACD,CAXD;AAYD"},"metadata":{},"sourceType":"module"}