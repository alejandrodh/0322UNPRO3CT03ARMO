{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { lessThan, multiply, sub, add, divide, greaterThan, lessOrEq, eq } from \"../operators\";\nimport invariant from 'invariant';\nimport AnimatedNode from \"../core/AnimatedNode\";\nimport { createAnimatedCond as cond } from \"../core/AnimatedCond\";\nimport { createAnimatedFunction as proc } from \"../core/AnimatedFunction\";\nvar interpolateInternalSingleProc = proc(function (value, inS, inE, outS, outE) {\n  var progress = divide(sub(value, inS), sub(inE, inS));\n  var resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  var result = cond(eq(inS, inE), cond(lessOrEq(value, inS), outS, outE), resultForNonZeroRange);\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  var inS = inputRange[offset];\n  var inE = inputRange[offset + 1];\n  var outS = outputRange[offset];\n  var outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n\n  return cond(lessThan(value, inputRange[offset + 1]), interpolateInternalSingle(value, inputRange, outputRange, offset), interpolateInternal(value, inputRange, outputRange, offset + 1));\n}\n\nexport var Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity'\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (var i = 1; i < arr.length; ++i) {\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode) continue;\n    invariant(arr[i] >= arr[i - 1], '%s must be monotonically non-decreasing. (%s)', name, arr);\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(arr.length >= 2, '%s must have at least 2 elements. (%s)', name, arr);\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] instanceof AnimatedNode || typeof arr[i] !== 'number') continue;\n    invariant(Number.isFinite(arr[i]), '%s cannot include %s. (%s)', name, arr[i], arr);\n  }\n}\n\nfunction convertToRadians(outputRange) {\n  for (var _iterator = _createForOfIteratorHelperLoose(outputRange.entries()), _step; !(_step = _iterator()).done;) {\n    var _ref = _step.value;\n\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var i = _ref2[0];\n    var value = _ref2[1];\n\n    if (typeof value === 'string' && value.endsWith('deg')) {\n      outputRange[i] = parseFloat(value) * (Math.PI / 180);\n    } else if (typeof value === 'string' && value.endsWith('rad')) {\n      outputRange[i] = parseFloat(value);\n    }\n  }\n}\n\nexport default function interpolate(value, config) {\n  var inputRange = config.inputRange,\n      outputRange = config.outputRange,\n      _config$extrapolate = config.extrapolate,\n      extrapolate = _config$extrapolate === void 0 ? Extrapolate.EXTEND : _config$extrapolate,\n      extrapolateLeft = config.extrapolateLeft,\n      extrapolateRight = config.extrapolateRight;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange and outputRange must be the same length.');\n  convertToRadians(outputRange);\n  var left = extrapolateLeft || extrapolate;\n  var right = extrapolateRight || extrapolate;\n  var output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.CLAMP) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), outputRange[outputRange.length - 1], output);\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), value, output);\n  }\n\n  return output;\n}","map":{"version":3,"names":["lessThan","multiply","sub","add","divide","greaterThan","lessOrEq","eq","invariant","AnimatedNode","createAnimatedCond","cond","createAnimatedFunction","proc","interpolateInternalSingleProc","value","inS","inE","outS","outE","progress","resultForNonZeroRange","result","interpolateInternalSingle","inputRange","outputRange","offset","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","convertToRadians","entries","endsWith","parseFloat","Math","PI","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated1/derived/interpolate.js"],"sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n  lessOrEq,\n  eq,\n} from '../operators';\nimport invariant from 'invariant';\n\nimport AnimatedNode from '../core/AnimatedNode';\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport { createAnimatedFunction as proc } from '../core/AnimatedFunction';\n\nconst interpolateInternalSingleProc = proc(function (\n  value,\n  inS,\n  inE,\n  outS,\n  outE\n) {\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  // logic below was made in order to provide a compatibility witn an Animated API\n  const resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  const result = cond(\n    eq(inS, inE),\n    cond(lessOrEq(value, inS), outS, outE),\n    resultForNonZeroRange\n  );\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || typeof arr[i] !== 'number') continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nfunction convertToRadians(outputRange) {\n  for (const [i, value] of outputRange.entries()) {\n    if (typeof value === 'string' && value.endsWith('deg')) {\n      outputRange[i] = parseFloat(value) * (Math.PI / 180);\n    } else if (typeof value === 'string' && value.endsWith('rad')) {\n      outputRange[i] = parseFloat(value);\n    }\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  convertToRadians(outputRange);\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}