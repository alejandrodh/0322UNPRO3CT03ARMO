{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\n\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_extends(_extends({}, evt.nativeEvent), {\n      eventName: eventName\n    }));\n  };\n}\n\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, WorkletEventHandler);\n\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n\n    if (!NativeReanimatedModule.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this = this;\n\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return NativeReanimatedModule.registerEventHandler(viewTag + eventName, _this.worklet);\n      });\n\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(NativeReanimatedModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations.forEach(function (id) {\n        return NativeReanimatedModule.unregisterEventHandler(id);\n      });\n      this.registrations = [];\n    }\n  }]);\n\n  return WorkletEventHandler;\n}();\n\nexport { WorkletEventHandler as default };","map":{"version":3,"names":["NativeReanimatedModule","jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","worklet","eventNames","reattachNeeded","listeners","viewTag","undefined","registrations","native","reduce","acc","newWorklet","fallbackEventName","map","registerEventHandler","length","push","forEach","id","unregisterEventHandler"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated2/WorkletEventHandler.js"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nfunction jsListener(eventName, handler) {\n    return (evt) => {\n        handler(Object.assign(Object.assign({}, evt.nativeEvent), { eventName }));\n    };\n}\nexport default class WorkletEventHandler {\n    constructor(worklet, eventNames = []) {\n        this.worklet = worklet;\n        this.eventNames = eventNames;\n        this.reattachNeeded = false;\n        this.listeners = {};\n        this.viewTag = undefined;\n        this.registrations = [];\n        if (!NativeReanimatedModule.native) {\n            this.listeners = eventNames.reduce((acc, eventName) => {\n                acc[eventName] = jsListener(eventName, worklet);\n                return acc;\n            }, {});\n        }\n    }\n    updateWorklet(newWorklet) {\n        this.worklet = newWorklet;\n        this.reattachNeeded = true;\n    }\n    registerForEvents(viewTag, fallbackEventName) {\n        this.viewTag = viewTag;\n        this.registrations = this.eventNames.map((eventName) => NativeReanimatedModule.registerEventHandler(viewTag + eventName, this.worklet));\n        if (this.registrations.length === 0 && fallbackEventName) {\n            this.registrations.push(NativeReanimatedModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n        }\n    }\n    unregisterFromEvents() {\n        this.registrations.forEach((id) => NativeReanimatedModule.unregisterEventHandler(id));\n        this.registrations = [];\n    }\n}\n"],"mappings":";;;AAAA,OAAOA,sBAAP;;AACA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;EACpC,OAAO,UAACC,GAAD,EAAS;IACZD,OAAO,CAAC,SAAc,SAAc,EAAd,EAAkBC,GAAG,CAACC,WAAtB,CAAd,EAAkD;MAAEH,SAAS,EAATA;IAAF,CAAlD,CAAD,CAAP;EACH,CAFD;AAGH;;IACoBI,mB;EACjB,6BAAYC,OAAZ,EAAsC;IAAA,IAAjBC,UAAiB,uEAAJ,EAAI;;IAAA;;IAClC,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,cAAL,GAAsB,KAAtB;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,OAAL,GAAeC,SAAf;IACA,KAAKC,aAAL,GAAqB,EAArB;;IACA,IAAI,CAACb,sBAAsB,CAACc,MAA5B,EAAoC;MAChC,KAAKJ,SAAL,GAAiBF,UAAU,CAACO,MAAX,CAAkB,UAACC,GAAD,EAAMd,SAAN,EAAoB;QACnDc,GAAG,CAACd,SAAD,CAAH,GAAiBD,UAAU,CAACC,SAAD,EAAYK,OAAZ,CAA3B;QACA,OAAOS,GAAP;MACH,CAHgB,EAGd,EAHc,CAAjB;IAIH;EACJ;;;;WACD,uBAAcC,UAAd,EAA0B;MACtB,KAAKV,OAAL,GAAeU,UAAf;MACA,KAAKR,cAAL,GAAsB,IAAtB;IACH;;;WACD,2BAAkBE,OAAlB,EAA2BO,iBAA3B,EAA8C;MAAA;;MAC1C,KAAKP,OAAL,GAAeA,OAAf;MACA,KAAKE,aAAL,GAAqB,KAAKL,UAAL,CAAgBW,GAAhB,CAAoB,UAACjB,SAAD;QAAA,OAAeF,sBAAsB,CAACoB,oBAAvB,CAA4CT,OAAO,GAAGT,SAAtD,EAAiE,KAAI,CAACK,OAAtE,CAAf;MAAA,CAApB,CAArB;;MACA,IAAI,KAAKM,aAAL,CAAmBQ,MAAnB,KAA8B,CAA9B,IAAmCH,iBAAvC,EAA0D;QACtD,KAAKL,aAAL,CAAmBS,IAAnB,CAAwBtB,sBAAsB,CAACoB,oBAAvB,CAA4CT,OAAO,GAAGO,iBAAtD,EAAyE,KAAKX,OAA9E,CAAxB;MACH;IACJ;;;WACD,gCAAuB;MACnB,KAAKM,aAAL,CAAmBU,OAAnB,CAA2B,UAACC,EAAD;QAAA,OAAQxB,sBAAsB,CAACyB,sBAAvB,CAA8CD,EAA9C,CAAR;MAAA,CAA3B;MACA,KAAKX,aAAL,GAAqB,EAArB;IACH;;;;;;SA7BgBP,mB"},"metadata":{},"sourceType":"module"}