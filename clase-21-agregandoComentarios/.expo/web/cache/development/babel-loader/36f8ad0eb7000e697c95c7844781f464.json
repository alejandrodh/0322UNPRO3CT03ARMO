{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { auth, db } from \"../firebase/config\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"../screens/Login\";\nimport Home from \"../screens/Home\";\nimport Register from \"../screens/Register\";\nimport { StatusBar } from 'expo-status-bar';\nimport TabNavigation from \"./TabNavigation\";\nimport NewMessage from \"../screens/NewMessage\";\nimport Submessages from \"../screens/Submessages/\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar StackNavigation = function (_Component) {\n  _inherits(StackNavigation, _Component);\n\n  var _super = _createSuper(StackNavigation);\n\n  function StackNavigation(props) {\n    var _this;\n\n    _classCallCheck(this, StackNavigation);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loggedIn: false,\n      errorMessage: 'Error1'\n    };\n    return _this;\n  }\n\n  _createClass(StackNavigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      auth.onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.setState({\n            loggedIn: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this3 = this;\n\n      auth.signOut().then(function (response) {\n        return _this3.setState({\n          loggedIn: false\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"signUp\",\n    value: function signUp(email, password) {\n      var _this4 = this;\n\n      auth.createUserWithEmailAndPassword(email, password).then(function (response) {\n        return _this4.setState({\n          logedIn: true\n        });\n      }).catch(function (error) {\n        return _this4.setState({\n          errorMessage: error.message\n        });\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(email, password) {\n      var _this5 = this;\n\n      auth.signInWithEmailAndPassword(email, password).then(function (response) {\n        _this5.setState({\n          loggedIn: true\n        });\n      }).catch(function (error) {\n        return _this5.setState({\n          errorMessage: error.message\n        });\n      });\n    }\n  }, {\n    key: \"newMessage\",\n    value: function newMessage(message) {\n      db.collection('messages').add({\n        owner: auth.currentUser.email,\n        createdAt: Date.now(),\n        message: message,\n        likes: [],\n        subMessages: []\n      }).then(function (response) {\n        return console.log(response);\n      }).catch(function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return _jsx(NavigationContainer, {\n        children: _jsx(Stack.Navigator, {\n          children: this.state.loggedIn ? _jsxs(Stack.Group, {\n            children: [_jsx(Stack.Screen, {\n              name: \"TabNavigation\",\n              component: TabNavigation,\n              options: {\n                headerShown: false\n              },\n              initialParams: {\n                logout: function logout() {\n                  return _this6.logout();\n                },\n                errorMessage: this.message\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Message\",\n              component: NewMessage,\n              initialParams: {\n                newMessage: function newMessage(message) {\n                  return _this6.newMessage(message);\n                }\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Submessages\",\n              component: Submessages\n            })]\n          }) : _jsxs(Stack.Group, {\n            children: [_jsx(Stack.Screen, {\n              name: \"Register\",\n              children: function children(props) {\n                return _jsx(Register, _objectSpread({\n                  signUp: function signUp(email, password) {\n                    return _this6.signUp(email, password);\n                  },\n                  errorMessage: _this6.state.errorMessage\n                }, props));\n              },\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Login\",\n              component: Login,\n              initialParams: {\n                signIn: function signIn(email, password) {\n                  return _this6.signIn(email, password);\n                }\n              },\n              options: {\n                headerShown: false\n              }\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return StackNavigation;\n}(Component);\n\nexport default StackNavigation;","map":{"version":3,"names":["React","Component","auth","db","NavigationContainer","createNativeStackNavigator","Login","Home","Register","StatusBar","TabNavigation","NewMessage","Submessages","Stack","StackNavigation","props","state","loggedIn","errorMessage","onAuthStateChanged","user","setState","signOut","then","response","catch","error","console","log","email","password","createUserWithEmailAndPassword","logedIn","message","signInWithEmailAndPassword","collection","add","owner","currentUser","createdAt","Date","now","likes","subMessages","headerShown","logout","newMessage","signUp","signIn"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/src/navigation/StackNavigation.js"],"sourcesContent":["import React, {Component} from 'react'\nimport { auth, db } from '../firebase/config';\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"../screens/Login\";\nimport Home from \"../screens/Home\";\nimport Register from \"../screens/Register\";\nimport { StatusBar } from 'expo-status-bar';\nimport TabNavigation from './TabNavigation';\nimport NewMessage from '../screens/NewMessage'\nimport Submessages from '../screens/Submessages/'\n\nconst Stack = createNativeStackNavigator()\n\nclass StackNavigation extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            loggedIn: false,\n            errorMessage:'Error1'\n        }\n    }\n    \n\n    componentDidMount(){\n        auth.onAuthStateChanged(user => {\n            if(user){\n                this.setState({loggedIn: true})\n            }\n        })\n    }\n\n    logout(){\n        auth.signOut()\n        .then(response => this.setState({loggedIn: false}))\n        .catch(error => console.log(error))\n    }\n\n    \n    signUp(email, password){\n        auth.createUserWithEmailAndPassword(email, password)\n        .then(response => this.setState({logedIn: true}))\n        .catch(error => this.setState({errorMessage:error.message}))\n    }\n\n\n    signIn(email, password){\n        auth.signInWithEmailAndPassword(email, password)\n        .then(response => {\n            this.setState({\n                loggedIn:true\n            })\n        })\n        .catch(error =>this.setState({errorMessage: error.message}))\n    }\n    \n    newMessage(message){\n        db.collection('messages').add({\n            owner:auth.currentUser.email,\n            createdAt: Date.now(),\n            message:message,\n            likes:[],\n            subMessages:[]\n        })\n        .then(response => console.log(response))\n        .catch(error => console.log(error.message))\n    }\n\n\n\n\n\n\n    render(){\n        return(\n            <NavigationContainer>\n                <Stack.Navigator>\n                    {\n                        this.state.loggedIn ?\n                        <Stack.Group>\n                            <Stack.Screen \n                            name='TabNavigation' \n                            component={TabNavigation}\n                            options={{\n                                headerShown:false\n                            }}\n                            initialParams={\n                                {\n                                    logout: () => this.logout(),\n                                    errorMessage: this.message\n                                }\n                            }\n                            />\n                            <Stack.Screen\n                                name='Message'\n                                component={NewMessage}\n                                initialParams={{\n                                    newMessage: (message)=> this.newMessage(message)                                    \n                                }}\n                            />\n                            <Stack.Screen\n                                name='Submessages'\n                                component={Submessages}\n                            />\n                        </Stack.Group>\n                        :\n                        <Stack.Group>\n                            <Stack.Screen \n                                name='Register' \n    \n                                children={\n                                    (props)=> <Register \n                                    signUp={(email, password)=> this.signUp(email, password)}\n                                    errorMessage={this.state.errorMessage}\n                                    {...props}\n                                    />\n                    \n                                }\n                                options={{\n                                    headerShown:false\n                                }}\n                            />\n                            <Stack.Screen \n                            name='Login' \n                            component={Login}\n                            initialParams={{\n                                signIn: (email, password)=> this.signIn(email, password)\n                            }}\n                            options={{\n                                headerShown:false\n                            }}\n                            />\n                        </Stack.Group>\n                    }\n                        \n                </Stack.Navigator>\n    </NavigationContainer>\n\n        )\n    }\n\n}\n\nexport default StackNavigation"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,EAAf;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,KAAK,GAAGR,0BAA0B,EAAxC;;IAEMS,e;;;;;EACF,yBAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IACd,0BAAMA,KAAN;IACA,MAAKC,KAAL,GAAW;MACPC,QAAQ,EAAE,KADH;MAEPC,YAAY,EAAC;IAFN,CAAX;IAFc;EAMjB;;;;WAGD,6BAAmB;MAAA;;MACfhB,IAAI,CAACiB,kBAAL,CAAwB,UAAAC,IAAI,EAAI;QAC5B,IAAGA,IAAH,EAAQ;UACJ,MAAI,CAACC,QAAL,CAAc;YAACJ,QAAQ,EAAE;UAAX,CAAd;QACH;MACJ,CAJD;IAKH;;;WAED,kBAAQ;MAAA;;MACJf,IAAI,CAACoB,OAAL,GACCC,IADD,CACM,UAAAC,QAAQ;QAAA,OAAI,MAAI,CAACH,QAAL,CAAc;UAACJ,QAAQ,EAAE;QAAX,CAAd,CAAJ;MAAA,CADd,EAECQ,KAFD,CAEO,UAAAC,KAAK;QAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;MAAA,CAFZ;IAGH;;;WAGD,gBAAOG,KAAP,EAAcC,QAAd,EAAuB;MAAA;;MACnB5B,IAAI,CAAC6B,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,EACCP,IADD,CACM,UAAAC,QAAQ;QAAA,OAAI,MAAI,CAACH,QAAL,CAAc;UAACW,OAAO,EAAE;QAAV,CAAd,CAAJ;MAAA,CADd,EAECP,KAFD,CAEO,UAAAC,KAAK;QAAA,OAAI,MAAI,CAACL,QAAL,CAAc;UAACH,YAAY,EAACQ,KAAK,CAACO;QAApB,CAAd,CAAJ;MAAA,CAFZ;IAGH;;;WAGD,gBAAOJ,KAAP,EAAcC,QAAd,EAAuB;MAAA;;MACnB5B,IAAI,CAACgC,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,EACCP,IADD,CACM,UAAAC,QAAQ,EAAI;QACd,MAAI,CAACH,QAAL,CAAc;UACVJ,QAAQ,EAAC;QADC,CAAd;MAGH,CALD,EAMCQ,KAND,CAMO,UAAAC,KAAK;QAAA,OAAG,MAAI,CAACL,QAAL,CAAc;UAACH,YAAY,EAAEQ,KAAK,CAACO;QAArB,CAAd,CAAH;MAAA,CANZ;IAOH;;;WAED,oBAAWA,OAAX,EAAmB;MACf9B,EAAE,CAACgC,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B;QAC1BC,KAAK,EAACnC,IAAI,CAACoC,WAAL,CAAiBT,KADG;QAE1BU,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFe;QAG1BR,OAAO,EAACA,OAHkB;QAI1BS,KAAK,EAAC,EAJoB;QAK1BC,WAAW,EAAC;MALc,CAA9B,EAOCpB,IAPD,CAOM,UAAAC,QAAQ;QAAA,OAAIG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAJ;MAAA,CAPd,EAQCC,KARD,CAQO,UAAAC,KAAK;QAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACO,OAAlB,CAAJ;MAAA,CARZ;IASH;;;WAOD,kBAAQ;MAAA;;MACJ,OACI,KAAC,mBAAD;QAAA,UACI,KAAC,KAAD,CAAO,SAAP;UAAA,UAEQ,KAAKjB,KAAL,CAAWC,QAAX,GACA,MAAC,KAAD,CAAO,KAAP;YAAA,WACI,KAAC,KAAD,CAAO,MAAP;cACA,IAAI,EAAC,eADL;cAEA,SAAS,EAAEP,aAFX;cAGA,OAAO,EAAE;gBACLkC,WAAW,EAAC;cADP,CAHT;cAMA,aAAa,EACT;gBACIC,MAAM,EAAE;kBAAA,OAAM,MAAI,CAACA,MAAL,EAAN;gBAAA,CADZ;gBAEI3B,YAAY,EAAE,KAAKe;cAFvB;YAPJ,EADJ,EAcI,KAAC,KAAD,CAAO,MAAP;cACI,IAAI,EAAC,SADT;cAEI,SAAS,EAAEtB,UAFf;cAGI,aAAa,EAAE;gBACXmC,UAAU,EAAE,oBAACb,OAAD;kBAAA,OAAY,MAAI,CAACa,UAAL,CAAgBb,OAAhB,CAAZ;gBAAA;cADD;YAHnB,EAdJ,EAqBI,KAAC,KAAD,CAAO,MAAP;cACI,IAAI,EAAC,aADT;cAEI,SAAS,EAAErB;YAFf,EArBJ;UAAA,EADA,GA4BA,MAAC,KAAD,CAAO,KAAP;YAAA,WACI,KAAC,KAAD,CAAO,MAAP;cACI,IAAI,EAAC,UADT;cAGI,QAAQ,EACJ,kBAACG,KAAD;gBAAA,OAAU,KAAC,QAAD;kBACV,MAAM,EAAE,gBAACc,KAAD,EAAQC,QAAR;oBAAA,OAAoB,MAAI,CAACiB,MAAL,CAAYlB,KAAZ,EAAmBC,QAAnB,CAApB;kBAAA,CADE;kBAEV,YAAY,EAAE,MAAI,CAACd,KAAL,CAAWE;gBAFf,GAGNH,KAHM,EAAV;cAAA,CAJR;cAWI,OAAO,EAAE;gBACL6B,WAAW,EAAC;cADP;YAXb,EADJ,EAgBI,KAAC,KAAD,CAAO,MAAP;cACA,IAAI,EAAC,OADL;cAEA,SAAS,EAAEtC,KAFX;cAGA,aAAa,EAAE;gBACX0C,MAAM,EAAE,gBAACnB,KAAD,EAAQC,QAAR;kBAAA,OAAoB,MAAI,CAACkB,MAAL,CAAYnB,KAAZ,EAAmBC,QAAnB,CAApB;gBAAA;cADG,CAHf;cAMA,OAAO,EAAE;gBACLc,WAAW,EAAC;cADP;YANT,EAhBJ;UAAA;QA9BR;MADJ,EADJ;IAiEH;;;;EA7HyB3C,S;;AAiI9B,eAAea,eAAf"},"metadata":{},"sourceType":"module"}