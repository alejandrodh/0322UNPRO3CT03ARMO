{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { convertToHSVA, isColor, toRGBA } from \"../Colors\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nfunction recognizePrefixSuffix(value) {\n  'worklet';\n\n  var _a;\n\n  if (typeof value === 'string') {\n    var match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n\n    if (!match) {\n      throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n    }\n\n    var prefix = match[1];\n    var suffix = match[4];\n    var number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n    return {\n      prefix: prefix,\n      suffix: suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\n\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n\n  var baseOnStart = animation.onStart;\n  var baseOnFrame = animation.onFrame;\n\n  var animationCopy = _extends({}, animation);\n\n  delete animationCopy.callback;\n\n  var prefNumberSuffOnStart = function prefNumberSuffOnStart(animation, value, timestamp, previousAnimation) {\n    var _a, _b, _c, _d;\n\n    var _recognizePrefixSuffi = recognizePrefixSuffix(value),\n        prefix = _recognizePrefixSuffi.prefix,\n        suffix = _recognizePrefixSuffi.suffix,\n        strippedValue = _recognizePrefixSuffi.strippedValue;\n\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n\n    var _recognizePrefixSuffi2 = recognizePrefixSuffix(animation.toValue),\n        strippedToValue = _recognizePrefixSuffi2.strippedValue;\n\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = previousAnimation.strippedCurrent;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current = ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') + previousAnimation.current + ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n    }\n  };\n\n  var prefNumberSuffOnFrame = function prefNumberSuffOnFrame(animation, timestamp) {\n    var _a, _b;\n\n    animation.current = animation.strippedCurrent;\n    var res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n    return res;\n  };\n\n  var tab = ['H', 'S', 'V', 'A'];\n\n  var colorOnStart = function colorOnStart(animation, value, timestamp, previousAnimation) {\n    var HSVAValue;\n    var HSVACurrent;\n    var HSVAToValue;\n    var res = [];\n\n    if (isColor(value)) {\n      HSVACurrent = convertToHSVA(animation.current);\n      HSVAValue = convertToHSVA(value);\n\n      if (animation.toValue) {\n        HSVAToValue = convertToHSVA(animation.toValue);\n      }\n    }\n\n    tab.forEach(function (i, index) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = HSVACurrent[index];\n      animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n      animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n  };\n\n  var colorOnFrame = function colorOnFrame(animation, timestamp) {\n    var HSVACurrent = convertToHSVA(animation.current);\n    var res = [];\n    var finished = true;\n    tab.forEach(function (i, index) {\n      animation[i].current = HSVACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n    return finished;\n  };\n\n  var arrayOnStart = function arrayOnStart(animation, value, timestamp, previousAnimation) {\n    value.forEach(function (v, i) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = animation.toValue[i];\n      animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n    });\n    animation.current = value;\n  };\n\n  var arrayOnFrame = function arrayOnFrame(animation, timestamp) {\n    var finished = true;\n    animation.current.forEach(function (v, i) {\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      animation.current[i] = animation[i].current;\n    });\n    return finished;\n  };\n\n  animation.onStart = function (animation, value, timestamp, previousAnimation) {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n\n  var create = function create() {\n    'worklet';\n\n    var animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !NativeReanimatedModule.native) {\n    return create();\n  }\n\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n\n  sharedValue.value = sharedValue.value;\n}\nexport function withStartValue(startValue, animation) {\n  'worklet';\n\n  return defineAnimation(startValue, function () {\n    'worklet';\n\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n\n    animation.current = startValue;\n    return animation;\n  });\n}","map":{"version":3,"names":["convertToHSVA","isColor","toRGBA","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_a","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_b","_c","_d","__prefix","__suffix","strippedCurrent","toValue","strippedToValue","current","startValue","prefNumberSuffOnFrame","res","tab","colorOnStart","HSVAValue","HSVACurrent","HSVAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","Array","isArray","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withStartValue"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js"],"sourcesContent":["/* global _WORKLET */\nimport { convertToHSVA, isColor, toRGBA } from '../Colors';\nimport NativeReanimatedModule from '../NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n    IN_STYLE_UPDATER = true;\n    const result = updater();\n    IN_STYLE_UPDATER = false;\n    return result;\n}\nfunction recognizePrefixSuffix(value) {\n    'worklet';\n    var _a;\n    if (typeof value === 'string') {\n        const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n        if (!match) {\n            throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n        }\n        const prefix = match[1];\n        const suffix = match[4];\n        // number with scientific notation\n        const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n        return { prefix, suffix, strippedValue: parseFloat(number) };\n    }\n    else {\n        return { strippedValue: value };\n    }\n}\nfunction decorateAnimation(animation) {\n    'worklet';\n    if (animation.isHigherOrder) {\n        return;\n    }\n    const baseOnStart = animation.onStart;\n    const baseOnFrame = animation.onFrame;\n    const animationCopy = Object.assign({}, animation);\n    delete animationCopy.callback;\n    const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n        var _a, _b, _c, _d;\n        // recognize prefix, suffix, and updates stripped value on animation start\n        const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n        animation.__prefix = prefix;\n        animation.__suffix = suffix;\n        animation.strippedCurrent = strippedValue;\n        const { strippedValue: strippedToValue } = recognizePrefixSuffix(animation.toValue);\n        animation.current = strippedValue;\n        animation.startValue = strippedValue;\n        animation.toValue = strippedToValue;\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current = previousAnimation.strippedCurrent;\n        }\n        baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current =\n                ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') +\n                    previousAnimation.current +\n                    ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n        }\n    };\n    const prefNumberSuffOnFrame = (animation, timestamp) => {\n        var _a, _b;\n        animation.current = animation.strippedCurrent;\n        const res = baseOnFrame(animation, timestamp);\n        animation.strippedCurrent = animation.current;\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        return res;\n    };\n    const tab = ['H', 'S', 'V', 'A'];\n    const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n        let HSVAValue;\n        let HSVACurrent;\n        let HSVAToValue;\n        const res = [];\n        if (isColor(value)) {\n            HSVACurrent = convertToHSVA(animation.current);\n            HSVAValue = convertToHSVA(value);\n            if (animation.toValue) {\n                HSVAToValue = convertToHSVA(animation.toValue);\n            }\n        }\n        tab.forEach((i, index) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = HSVACurrent[index];\n            animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n            animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n    };\n    const colorOnFrame = (animation, timestamp) => {\n        const HSVACurrent = convertToHSVA(animation.current);\n        const res = [];\n        let finished = true;\n        tab.forEach((i, index) => {\n            animation[i].current = HSVACurrent[index];\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n        return finished;\n    };\n    const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n        value.forEach((v, i) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = v;\n            animation[i].toValue = animation.toValue[i];\n            animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n        });\n        animation.current = value;\n    };\n    const arrayOnFrame = (animation, timestamp) => {\n        let finished = true;\n        animation.current.forEach((v, i) => {\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            animation.current[i] = animation[i].current;\n        });\n        return finished;\n    };\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\n        if (isColor(value)) {\n            colorOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = colorOnFrame;\n            return;\n        }\n        else if (Array.isArray(value)) {\n            arrayOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = arrayOnFrame;\n            return;\n        }\n        else if (typeof value === 'string') {\n            prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = prefNumberSuffOnFrame;\n            return;\n        }\n        baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n}\nexport function defineAnimation(starting, factory) {\n    'worklet';\n    if (IN_STYLE_UPDATER) {\n        return starting;\n    }\n    const create = () => {\n        'worklet';\n        const animation = factory();\n        decorateAnimation(animation);\n        return animation;\n    };\n    if (_WORKLET || !NativeReanimatedModule.native) {\n        return create();\n    }\n    // @ts-ignore: eslint-disable-line\n    return create;\n}\nexport function cancelAnimation(sharedValue) {\n    'worklet';\n    // setting the current value cancels the animation if one is currently running\n    sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n// TODO it should work only if there was no animation before.\nexport function withStartValue(startValue, animation) {\n    'worklet';\n    return defineAnimation(startValue, () => {\n        'worklet';\n        if (!_WORKLET && typeof animation === 'function') {\n            animation = animation();\n        }\n        animation.current = startValue;\n        return animation;\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}