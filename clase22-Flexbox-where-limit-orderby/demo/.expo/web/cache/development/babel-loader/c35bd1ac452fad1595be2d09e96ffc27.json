{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Platform, UnavailabilityError } from '@unimodules/core';\nimport * as React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { PermissionStatus } from \"./Camera.types\";\nimport ExponentCamera from \"./ExponentCamera\";\nimport CameraManager from \"./ExponentCameraManager\";\nimport { ConversionTables, ensureNativeProps } from \"./utils/props\";\nvar EventThrottleMs = 500;\nvar _PICTURE_SAVED_CALLBACKS = {};\nvar _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options) {\n  var pictureOptions = !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n\n  if (pictureOptions.onPictureSaved) {\n    var id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options) {\n  var recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction _onPictureSaved(_ref) {\n  var nativeEvent = _ref.nativeEvent;\n  var id = nativeEvent.id,\n      data = nativeEvent.data;\n  var callback = _PICTURE_SAVED_CALLBACKS[id];\n\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nvar Camera = function (_React$Component) {\n  _inherits(Camera, _React$Component);\n\n  var _super = _createSuper(Camera);\n\n  function Camera() {\n    var _this;\n\n    _classCallCheck(this, Camera);\n\n    _this = _super.apply(this, arguments);\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n\n    _this._onMountError = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n\n    _this._onObjectDetected = function (callback) {\n      return function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n        var type = nativeEvent.type;\n\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date().getTime() - _this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n          return;\n        }\n\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n\n    _this._setReference = function (ref) {\n      if (ref) {\n        _this._cameraRef = ref;\n\n        if (Platform.OS === 'web') {\n          _this._cameraHandle = ref;\n        } else {\n          _this._cameraHandle = findNodeHandle(ref);\n        }\n      } else {\n        _this._cameraRef = null;\n        _this._cameraHandle = null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Camera, [{\n    key: \"takePictureAsync\",\n    value: function takePictureAsync(options) {\n      var pictureOptions;\n      return _regeneratorRuntime.async(function takePictureAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pictureOptions = ensurePictureOptions(options);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.takePicture(pictureOptions, this._cameraHandle));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSupportedRatiosAsync\",\n    value: function getSupportedRatiosAsync() {\n      return _regeneratorRuntime.async(function getSupportedRatiosAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (CameraManager.getSupportedRatios) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getAvailablePictureSizesAsync\",\n    value: function getAvailablePictureSizesAsync(ratio) {\n      return _regeneratorRuntime.async(function getAvailablePictureSizesAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (CameraManager.getAvailablePictureSizes) {\n                _context3.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle));\n\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"recordAsync\",\n    value: function recordAsync(options) {\n      var recordingOptions;\n      return _regeneratorRuntime.async(function recordAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (CameraManager.record) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('Camera', 'recordAsync');\n\n            case 2:\n              recordingOptions = ensureRecordingOptions(options);\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(CameraManager.record(recordingOptions, this._cameraHandle));\n\n            case 5:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (!CameraManager.stopRecording) {\n        throw new UnavailabilityError('Camera', 'stopRecording');\n      }\n\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pausePreview\",\n    value: function pausePreview() {\n      if (!CameraManager.pausePreview) {\n        throw new UnavailabilityError('Camera', 'pausePreview');\n      }\n\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"resumePreview\",\n    value: function resumePreview() {\n      if (!CameraManager.resumePreview) {\n        throw new UnavailabilityError('Camera', 'resumePreview');\n      }\n\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nativeProps = ensureNativeProps(this.props);\n      var onBarCodeScanned = this.props.onBarCodeScanned ? this._onObjectDetected(this.props.onBarCodeScanned) : undefined;\n\n      var onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n      return React.createElement(ExponentCamera, _extends({}, nativeProps, {\n        ref: this._setReference,\n        onCameraReady: this._onCameraReady,\n        onMountError: this._onMountError,\n        onBarCodeScanned: onBarCodeScanned,\n        onFacesDetected: onFacesDetected,\n        onPictureSaved: _onPictureSaved\n      }));\n    }\n  }], [{\n    key: \"isAvailableAsync\",\n    value: function isAvailableAsync() {\n      return _regeneratorRuntime.async(function isAvailableAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (CameraManager.isAvailableAsync) {\n                _context5.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n\n            case 2:\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(CameraManager.isAvailableAsync());\n\n            case 4:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getAvailableCameraTypesAsync\",\n    value: function getAvailableCameraTypesAsync() {\n      return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (CameraManager.getAvailableCameraTypesAsync) {\n                _context6.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n\n            case 2:\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(CameraManager.getAvailableCameraTypesAsync());\n\n            case 4:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getAvailableVideoCodecsAsync\",\n    value: function getAvailableVideoCodecsAsync() {\n      return _regeneratorRuntime.async(function getAvailableVideoCodecsAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (CameraManager.getAvailableVideoCodecsAsync) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n\n            case 2:\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(CameraManager.getAvailableVideoCodecsAsync());\n\n            case 4:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getPermissionsAsync\",\n    value: function getPermissionsAsync() {\n      return _regeneratorRuntime.async(function getPermissionsAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", CameraManager.getPermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"requestPermissionsAsync\",\n    value: function requestPermissionsAsync() {\n      return _regeneratorRuntime.async(function requestPermissionsAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", CameraManager.requestPermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getCameraPermissionsAsync\",\n    value: function getCameraPermissionsAsync() {\n      return _regeneratorRuntime.async(function getCameraPermissionsAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", CameraManager.getCameraPermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"requestCameraPermissionsAsync\",\n    value: function requestCameraPermissionsAsync() {\n      return _regeneratorRuntime.async(function requestCameraPermissionsAsync$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", CameraManager.requestCameraPermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getMicrophonePermissionsAsync\",\n    value: function getMicrophonePermissionsAsync() {\n      return _regeneratorRuntime.async(function getMicrophonePermissionsAsync$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", CameraManager.getMicrophonePermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"requestMicrophonePermissionsAsync\",\n    value: function requestMicrophonePermissionsAsync() {\n      return _regeneratorRuntime.async(function requestMicrophonePermissionsAsync$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", CameraManager.requestMicrophonePermissionsAsync());\n\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Camera;\n}(React.Component);\n\nexport { Camera as default };\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  VideoStabilization: CameraManager.VideoStabilization || {},\n  VideoCodec: CameraManager.VideoCodec\n};\nCamera.ConversionTables = ConversionTables;\nCamera.defaultProps = {\n  zoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  faceDetectorSettings: {},\n  type: CameraManager.Type.back,\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  whiteBalance: CameraManager.WhiteBalance.auto\n};\nvar Constants = Camera.Constants,\n    getPermissionsAsync = Camera.getPermissionsAsync,\n    requestPermissionsAsync = Camera.requestPermissionsAsync,\n    getCameraPermissionsAsync = Camera.getCameraPermissionsAsync,\n    requestCameraPermissionsAsync = Camera.requestCameraPermissionsAsync,\n    getMicrophonePermissionsAsync = Camera.getMicrophonePermissionsAsync,\n    requestMicrophonePermissionsAsync = Camera.requestMicrophonePermissionsAsync;\nexport { Constants, getPermissionsAsync, requestPermissionsAsync, getCameraPermissionsAsync, requestCameraPermissionsAsync, getMicrophonePermissionsAsync, requestMicrophonePermissionsAsync };\nexport { PermissionStatus };","map":{"version":3,"sources":["../src/Camera.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\nimport * as React from 'react';\nimport { findNodeHandle } from 'react-native';\n\nimport {\n  BarCodeScanningResult,\n  CameraCapturedPicture,\n  CameraMountError,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  ConstantsType,\n  FaceDetectionResult,\n  PermissionExpiration,\n  PermissionResponse,\n  PermissionStatus,\n  VideoCodec,\n} from './Camera.types';\nimport ExponentCamera from './ExponentCamera';\nimport CameraManager from './ExponentCameraManager';\nimport { ConversionTables, ensureNativeProps } from './utils/props';\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\n\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options?: CameraPictureOptions): CameraPictureOptions {\n  const pictureOptions: CameraPictureOptions =\n    !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options?: CameraRecordingOptions): CameraRecordingOptions {\n  let recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction _onPictureSaved({\n  nativeEvent,\n}: {\n  nativeEvent: { data: CameraCapturedPicture; id: number };\n}) {\n  const { id, data } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nexport default class Camera extends React.Component<CameraProps> {\n  static async isAvailableAsync(): Promise<boolean> {\n    if (!CameraManager.isAvailableAsync) {\n      throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n    }\n\n    return await CameraManager.isAvailableAsync();\n  }\n\n  static async getAvailableCameraTypesAsync(): Promise<('front' | 'back')[]> {\n    if (!CameraManager.getAvailableCameraTypesAsync) {\n      throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n    }\n\n    return await CameraManager.getAvailableCameraTypesAsync();\n  }\n\n  static async getAvailableVideoCodecsAsync(): Promise<string[]> {\n    if (!CameraManager.getAvailableVideoCodecsAsync) {\n      throw new UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n    }\n\n    return await CameraManager.getAvailableVideoCodecsAsync();\n  }\n\n  static Constants: ConstantsType = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {},\n    VideoCodec: CameraManager.VideoCodec,\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = ConversionTables;\n\n  static defaultProps: CameraProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getPermissionsAsync();\n  }\n\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestPermissionsAsync();\n  }\n\n  static async getCameraPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getCameraPermissionsAsync();\n  }\n\n  static async requestCameraPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestCameraPermissionsAsync();\n  }\n\n  static async getMicrophonePermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getMicrophonePermissionsAsync();\n  }\n\n  static async requestMicrophonePermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestMicrophonePermissionsAsync();\n  }\n\n  _cameraHandle?: number | null;\n  _cameraRef?: React.Component | null;\n  _lastEvents: { [eventName: string]: string } = {};\n  _lastEventsTimes: { [eventName: string]: Date } = {};\n\n  async takePictureAsync(options?: CameraPictureOptions): Promise<CameraCapturedPicture> {\n    const pictureOptions = ensurePictureOptions(options);\n\n    return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync(): Promise<string[]> {\n    if (!CameraManager.getSupportedRatios) {\n      throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n    }\n\n    return await CameraManager.getSupportedRatios(this._cameraHandle);\n  }\n\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<string[]> {\n    if (!CameraManager.getAvailablePictureSizes) {\n      throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n    }\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n  }\n\n  async recordAsync(\n    options?: CameraRecordingOptions\n  ): Promise<{ uri: string; codec?: VideoCodec }> {\n    if (!CameraManager.record) {\n      throw new UnavailabilityError('Camera', 'recordAsync');\n    }\n\n    const recordingOptions = ensureRecordingOptions(options);\n    return await CameraManager.record(recordingOptions, this._cameraHandle);\n  }\n\n  stopRecording() {\n    if (!CameraManager.stopRecording) {\n      throw new UnavailabilityError('Camera', 'stopRecording');\n    }\n\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    if (!CameraManager.pausePreview) {\n      throw new UnavailabilityError('Camera', 'pausePreview');\n    }\n\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  resumePreview() {\n    if (!CameraManager.resumePreview) {\n      throw new UnavailabilityError('Camera', 'resumePreview');\n    }\n\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback?: Function) => ({ nativeEvent }: { nativeEvent: any }) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _setReference = (ref?: React.Component) => {\n    if (ref) {\n      this._cameraRef = ref;\n      // TODO(Bacon): Unify these - perhaps with hooks?\n      if (Platform.OS === 'web') {\n        this._cameraHandle = ref as any;\n      } else {\n        this._cameraHandle = findNodeHandle(ref);\n      }\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  render() {\n    const nativeProps = ensureNativeProps(this.props);\n\n    const onBarCodeScanned = this.props.onBarCodeScanned\n      ? this._onObjectDetected(this.props.onBarCodeScanned)\n      : undefined;\n    const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n    return (\n      <ExponentCamera\n        {...nativeProps}\n        ref={this._setReference}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onBarCodeScanned={onBarCodeScanned}\n        onFacesDetected={onFacesDetected}\n        onPictureSaved={_onPictureSaved}\n      />\n    );\n  }\n}\n\nexport const {\n  Constants,\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  getCameraPermissionsAsync,\n  requestCameraPermissionsAsync,\n  getMicrophonePermissionsAsync,\n  requestMicrophonePermissionsAsync,\n} = Camera;\n\nexport {\n  CameraCapturedPicture,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  PermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  BarCodeScanningResult,\n  FaceDetectionResult,\n  CameraMountError,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}