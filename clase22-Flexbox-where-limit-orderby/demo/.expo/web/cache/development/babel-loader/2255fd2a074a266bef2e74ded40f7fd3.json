{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isKeyboardShown = _React$useState2[0],\n      setIsKeyboardShown = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n\n    var subscriptions;\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardShow), Keyboard.addListener('keyboardWillHide', handleKeyboardHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardShow), Keyboard.addListener('keyboardDidHide', handleKeyboardHide)];\n    }\n\n    return function () {\n      subscriptions.forEach(function (s) {\n        return s.remove();\n      });\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","handleKeyboardShow","setIsKeyboardShown","handleKeyboardHide","Platform","subscriptions","Keyboard","s"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAGA,eAAe,SAAA,kBAAA,GAA8B;EAC3C,sBAA8CA,KAAK,CAALA,QAAAA,CAA9C,KAA8CA,CAA9C;EAAA;EAAA,IAAM,eAAN;EAAA,IAAM,kBAAN;;EAEAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;MAAA,OAAMC,kBAAkB,CAAnD,IAAmD,CAAxB;IAAA,CAA3B;;IACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;MAAA,OAAMD,kBAAkB,CAAnD,KAAmD,CAAxB;IAAA,CAA3B;;IAEA,IAAA,aAAA;;IAEA,IAAIE,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;MACzBC,aAAa,GAAG,CACdC,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,EADc,kBACdA,CADc,EAEdA,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,EAFFD,kBAEEC,CAFc,CAAhBD;IADF,CAAA,MAKO;MACLA,aAAa,GAAG,CACdC,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EADc,kBACdA,CADc,EAEdA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EAFFD,kBAEEC,CAFc,CAAhBD;IAID;;IAED,OAAO,YAAM;MACXA,aAAa,CAAbA,OAAAA,CAAuBE,UAAAA,CAAD;QAAA,OAAOA,CAAC,CAA9BF,MAA6BE,EAAP;MAAA,CAAtBF;IADF,CAAA;EAlBFL,CAAAA,EAAAA,EAAAA;EAuBA,OAAA,eAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}