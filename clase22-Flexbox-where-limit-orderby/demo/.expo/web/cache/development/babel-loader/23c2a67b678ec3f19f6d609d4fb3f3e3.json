{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ComplexAnimationBuilder } from \"../animationBuilder\";\nexport var PinwheelIn = function (_ComplexAnimationBuil) {\n  _inherits(PinwheelIn, _ComplexAnimationBuil);\n\n  var _super = _createSuper(PinwheelIn);\n\n  function PinwheelIn() {\n    var _this;\n\n    _classCallCheck(this, PinwheelIn);\n\n    _this = _super.apply(this, arguments);\n\n    _this.build = function () {\n      var delayFunction = _this.getDelayFunction();\n\n      var _this$getAnimationAnd = _this.getAnimationAndConfig(),\n          _this$getAnimationAnd2 = _slicedToArray(_this$getAnimationAnd, 2),\n          animation = _this$getAnimationAnd2[0],\n          config = _this$getAnimationAnd2[1];\n\n      var delay = _this.getDelay();\n\n      var callback = _this.callbackV;\n      var initialValues = _this.initialValues;\n      return function (_values) {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(1, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(1, config))\n            }, {\n              rotate: delayFunction(delay, animation('0', config))\n            }]\n          },\n          initialValues: _extends({\n            opacity: 0,\n            transform: [{\n              scale: 0\n            }, {\n              rotate: '5'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(PinwheelIn, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new PinwheelIn();\n    }\n  }]);\n\n  return PinwheelIn;\n}(ComplexAnimationBuilder);\nexport var PinwheelOut = function (_ComplexAnimationBuil2) {\n  _inherits(PinwheelOut, _ComplexAnimationBuil2);\n\n  var _super2 = _createSuper(PinwheelOut);\n\n  function PinwheelOut() {\n    var _this2;\n\n    _classCallCheck(this, PinwheelOut);\n\n    _this2 = _super2.apply(this, arguments);\n\n    _this2.build = function () {\n      var delayFunction = _this2.getDelayFunction();\n\n      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),\n          _this2$getAnimationAn2 = _slicedToArray(_this2$getAnimationAn, 2),\n          animation = _this2$getAnimationAn2[0],\n          config = _this2$getAnimationAn2[1];\n\n      var delay = _this2.getDelay();\n\n      var callback = _this2.callbackV;\n      var initialValues = _this2.initialValues;\n      return function (_values) {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(0, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(0, config))\n            }, {\n              rotate: delayFunction(delay, animation('5', config))\n            }]\n          },\n          initialValues: _extends({\n            opacity: 1,\n            transform: [{\n              scale: 1\n            }, {\n              rotate: '0'\n            }]\n          }, initialValues),\n          callback: callback\n        };\n      };\n    };\n\n    return _this2;\n  }\n\n  _createClass(PinwheelOut, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new PinwheelOut();\n    }\n  }]);\n\n  return PinwheelOut;\n}(ComplexAnimationBuilder);","map":{"version":3,"names":["ComplexAnimationBuilder","PinwheelIn","arguments","build","delayFunction","getDelayFunction","getAnimationAndConfig","animation","config","delay","getDelay","callback","callbackV","initialValues","_values","animations","opacity","transform","scale","rotate","PinwheelOut"],"sources":["/home/carlos/Documents/develop/DH/0322UNPRO3CM02ARMO/clase-15-agregar_y_obtener_datos/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultAnimations/Pinwheel.js"],"sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(1, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(1, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('0', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 0, transform: [\n                            {\n                                scale: 0,\n                            },\n                            {\n                                rotate: '5',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelIn();\n    }\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            const initialValues = this.initialValues;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(0, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(0, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('5', config)),\n                            },\n                        ],\n                    },\n                    initialValues: Object.assign({ opacity: 1, transform: [\n                            {\n                                scale: 1,\n                            },\n                            {\n                                rotate: '0',\n                            },\n                        ] }, initialValues),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelOut();\n    }\n}\n"],"mappings":";;;;;;;;;;;;AAAA,SAASA,uBAAT;AACA,WAAaC,UAAb;EAAA;;EAAA;;EACI,sBAAc;IAAA;;IAAA;;IACV,2BAASC,SAAT;;IACA,MAAKC,KAAL,GAAa,YAAM;MACf,IAAMC,aAAa,GAAG,MAAKC,gBAAL,EAAtB;;MACA,4BAA4B,MAAKC,qBAAL,EAA5B;MAAA;MAAA,IAAOC,SAAP;MAAA,IAAkBC,MAAlB;;MACA,IAAMC,KAAK,GAAG,MAAKC,QAAL,EAAd;;MACA,IAAMC,QAAQ,GAAG,MAAKC,SAAtB;MACA,IAAMC,aAAa,GAAG,MAAKA,aAA3B;MACA,OAAO,UAACC,OAAD,EAAa;QAChB;;QACA,OAAO;UACHC,UAAU,EAAE;YACRC,OAAO,EAAEZ,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;YAERS,SAAS,EAAE,CACP;cACIC,KAAK,EAAEd,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;YADxB,CADO,EAIP;cACIW,MAAM,EAAEf,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;YADzB,CAJO;UAFH,CADT;UAYHK,aAAa,EAAE,SAAc;YAAEG,OAAO,EAAE,CAAX;YAAcC,SAAS,EAAE,CAC9C;cACIC,KAAK,EAAE;YADX,CAD8C,EAI9C;cACIC,MAAM,EAAE;YADZ,CAJ8C;UAAzB,CAAd,EAONN,aAPM,CAZZ;UAoBHF,QAAQ,EAAEA;QApBP,CAAP;MAsBH,CAxBD;IAyBH,CA/BD;;IAFU;EAkCb;;EAnCL;IAAA;IAAA,OAoCI,0BAAwB;MACpB,OAAO,IAAIV,UAAJ,EAAP;IACH;EAtCL;;EAAA;AAAA,EAAgCD,uBAAhC;AAwCA,WAAaoB,WAAb;EAAA;;EAAA;;EACI,uBAAc;IAAA;;IAAA;;IACV,6BAASlB,SAAT;;IACA,OAAKC,KAAL,GAAa,YAAM;MACf,IAAMC,aAAa,GAAG,OAAKC,gBAAL,EAAtB;;MACA,4BAA4B,OAAKC,qBAAL,EAA5B;MAAA;MAAA,IAAOC,SAAP;MAAA,IAAkBC,MAAlB;;MACA,IAAMC,KAAK,GAAG,OAAKC,QAAL,EAAd;;MACA,IAAMC,QAAQ,GAAG,OAAKC,SAAtB;MACA,IAAMC,aAAa,GAAG,OAAKA,aAA3B;MACA,OAAO,UAACC,OAAD,EAAa;QAChB;;QACA,OAAO;UACHC,UAAU,EAAE;YACRC,OAAO,EAAEZ,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;YAERS,SAAS,EAAE,CACP;cACIC,KAAK,EAAEd,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;YADxB,CADO,EAIP;cACIW,MAAM,EAAEf,aAAa,CAACK,KAAD,EAAQF,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;YADzB,CAJO;UAFH,CADT;UAYHK,aAAa,EAAE,SAAc;YAAEG,OAAO,EAAE,CAAX;YAAcC,SAAS,EAAE,CAC9C;cACIC,KAAK,EAAE;YADX,CAD8C,EAI9C;cACIC,MAAM,EAAE;YADZ,CAJ8C;UAAzB,CAAd,EAONN,aAPM,CAZZ;UAoBHF,QAAQ,EAAEA;QApBP,CAAP;MAsBH,CAxBD;IAyBH,CA/BD;;IAFU;EAkCb;;EAnCL;IAAA;IAAA,OAoCI,0BAAwB;MACpB,OAAO,IAAIS,WAAJ,EAAP;IACH;EAtCL;;EAAA;AAAA,EAAiCpB,uBAAjC"},"metadata":{},"sourceType":"module"}